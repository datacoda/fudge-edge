# Open Source Initiative OSI - The MIT License (MIT):Licensing
#
# The MIT License (MIT)
# Copyright (c) 2012 DotCloud Inc <opensource@dotcloud.com>, Sam Alba <sam.alba@gmail.com>
#
# Modified for Fudge Edge
# Apache 2.0 License
# Copyright (c) 2014 Nephila Graphic, Ted Chen <ted@nephilagraphic.com>

set $backend '';
set $backends_len '';
set $backend_id '';
set $frontend '';
set $vhost '';

access_by_lua '
    -- Connect to Redis
    local redis = require "resty.redis"
    local red = redis:new()
    red:set_timeout(1000)
    local ok, err = red:connect("127.0.0.1", 6379)
    if not ok then
        ngx.say("Failed to connect to Redis: ", err)
        return
    end

    -- Extract only the hostname without the port
    local frontend = ngx.re.match(ngx.var.http_host, "^([^:]*)")[1]
    -- Extract the domain name without the subdomain
    local domain_name = ngx.re.match(frontend, "(\.[^.]+\.[^.]+)$")[1]

    -- Redis lookup
    red:multi()
    red:hmget("routeinfo:" .. frontend, "Varnish", "VarnishHandler")
    red:hmget("routeinfo:*" .. domain_name, "Varnish", "VarnishHandler")
    local ans, err = red:exec()
    if not ans then
        ngx.say("Lookup failed: ", err)
        return
    end

    -- Parse the result of the Redis lookup
    local handler = ans[1]
    if #handler == 0 then
        handler = ans[2]
    end
    if #handler == 0 then
        return
    end

    -- Go directly to the app router if varnish is not selected
    local backend = "http://127.0.0.1:8080"
    if handler[1] then
        backend = "http://127.0.0.1:6081"
    end

    -- Set the connection pool (to avoid connect/close everytime)
    red:set_keepalive(0, 100)

    -- Export variables
    ngx.var.backend = backend
    ngx.var.vhost = vhost_name
';

proxy_pass $backend;

